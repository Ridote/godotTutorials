[gd_scene load_steps=4 format=2]

[ext_resource path="res://Assets/Audio/BallSound.ogg" type="AudioStream" id=1]

[sub_resource type="GDScript" id=1]
script/source = "extends KinematicBody2D

signal scored(player)

const defaultRadius : float = 18.0
export var radius : float = defaultRadius

var direction : Vector2 = Vector2(1.0,0.0)
var speed : float = 150.0

func _ready():
	add_to_group(Groups.G_BALL)
	setRadius()
	if $Timer.connect(\"timeout\", self, \"_on_increase_speed\"):
		print(\"Error connecting timeout signal in Ball's timer\")

func _draw():
	draw_circle(Vector2(0.0,0.0), radius, Color(0.0,0.0,1.0,1.0))

func setRadius(radius : float = defaultRadius):
	$CollisionShape2D.shape.radius = radius

func setInitialDirection(initialDirection : Vector2 = Vector2(1.0,0.0)):
	direction = initialDirection.normalized()

func _physics_process(delta):
	var collision = move_and_collide(direction*speed*delta, false)
	if collision:
		$BallSound.play()
		var collider = collision.get_collider()
		# Collision with player/npc
		if(collider.is_in_group(Groups.G_BAR)):
			direction = (global_position - collider.global_position).normalized()
		elif(collider.is_in_group(Groups.G_WALL)):
			if(collider.is_in_group(Groups.G_ENDER)):
				if(collider.is_in_group(Groups.G_PLAYER1_GOAL)):
					emit_signal(\"scored\", \"player1\")
				elif(collider.is_in_group(Groups.G_PLAYER2_GOAL)):
					emit_signal(\"scored\", \"player2\")
				else:
					print(\"Error, wall doesn't belong to any player\")
				queue_free()
			elif(collider.is_in_group(Groups.G_SIDE_WALL)):
				direction.x *= -1
			elif(collider.is_in_group(Groups.G_UP_DOWN_WALL)):
				direction.y *= -1

func _on_increase_speed():
	speed += 20"

[sub_resource type="CircleShape2D" id=2]

[node name="Ball" type="KinematicBody2D"]
script = SubResource( 1 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource( 2 )

[node name="Timer" type="Timer" parent="."]
autostart = true

[node name="BallSound" type="AudioStreamPlayer2D" parent="."]
stream = ExtResource( 1 )
bus = "Sounds"
